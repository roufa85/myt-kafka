---
- name: Install a list of packages
  yum:
    name:
      - fontconfig
      - freetype*
      - urw-fonts
      - initscripts
      - wget
    state: present
  tags:
    - grafana
    - prometheus

- name: Add Grafana YUM Repo
  yum_repository:
    name: grafana
    description: Grafana YUM repo
    baseurl: https://packages.grafana.com/oss/rpm
    repo_gpgcheck: yes
    enabled: yes
    gpgcheck: yes
    gpgkey: https://packages.grafana.com/gpg.key
    sslverify: yes
    sslcacert: /etc/pki/tls/certs/ca-bundle.crt
  tags:
    - grafana

- name: update repo cache for the new repo
  command: yum -q makecache -y --disablerepo=* --enablerepo=grafana

- name: Install Grafana
  yum:
    name:
      - grafana
    state: present
  tags:
    - grafana

- name: Start service grafana-server, if not started
  service:
    name: grafana-server
    state: started
  tags:
    - grafana

- name: Enable service grafana-server
  service:
    name: grafana-server
    enabled: yes
  tags:
    - grafana

- name: Add the prometheus user 
  user:
    name: prometheus
    create_home: false
    shell: /bin/false
  tags:
    - prometheus

- name: Create directories
  file:
    path: '{{ item }}'
    state: directory
  loop:
    - /etc/prometheus
    - /var/lib/prometheus
  tags:
    - prometheus

- name: Change prom lib owner
  file:
    path: /var/lib/prometheus
    owner: prometheus
    group: prometheus
  tags:
    - prometheus

- name: Download & Unarchive prometheus binaries
  unarchive:
    src: https://github.com/prometheus/prometheus/releases/download/v2.7.1/prometheus-2.7.1.linux-amd64.tar.gz
    dest: /tmp
    remote_src: true
  tags:
    - prometheus

- name: Move binaries and config
  command: mv /tmp/prometheus-2.7.1.linux-amd64/console_libraries /etc/prometheus
  ignore_errors: true
  tags:
    - prometheus

- name: Move binaries and config
  command: mv /tmp/prometheus-2.7.1.linux-amd64/consoles /etc/prometheus
  ignore_errors: true
  tags:
    - prometheus
  
  ## TODO: Update it using template
- name: Load Yaml config
  template: 
    src: templates/prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    group: prometheus
    owner: prometheus
    mode: '0644'
  tags:
    - prometheus

- name: Change prom lib owner
  file:
    path: /etc/prometheus
    owner: prometheus
    group: prometheus
    recurse: true
  tags:
    - prometheus

- name: Move binaries and config
  command: mv /tmp/prometheus-2.7.1.linux-amd64/prometheus /usr/local/bin/
  ignore_errors: true
  tags:
    - prometheus

- name: Move binaries and config
  command: mv /tmp/prometheus-2.7.1.linux-amd64/promtool /usr/local/bin/
  ignore_errors: true
  tags:
    - prometheus

- name: Cnange prom lib owner
  file:
    path: /usr/local/bin/prometheus
    owner: prometheus
    group: prometheus
  tags:
    - prometheus

- name: Change prom lib owner
  file:
    path: /usr/local/bin/promtool
    owner: prometheus
    group: prometheus
  tags:
    - prometheus

- name: Create Prom Service file
  copy:
    src: files/prometheus.service
    dest: /etc/systemd/system/prometheus.service
  notify:
    - reload systemctl
  tags:
    - prometheus

- name: Start service prometheus, if not started
  service:
    name: prometheus
    state: started
  tags:
    - prometheus

- name: Enable service prometheus
  service:
    name: prometheus
    enabled: yes
  tags:
    - prometheus

- name: Configure Prometheus as datasource to Grafana
  uri: 
    force: True
    force_basic_auth: True
    user: "admin"
    password: "admin"
    url: "http://localhost:3000/api/datasources"
    body_format: "json"
    method: "POST"
    validate_certs: False
    body: "{{ lookup('template', 'templates/grafana_datasource_post_payload.json.j2') }}"
  register: grafana_api_result
  vars:
    prometheus_host: "http://localhost:9090"
  ignore_errors: true
  tags:
    - grafana_config

- name: Create Kafka user in Grafana
  uri: 
    force: True
    force_basic_auth: True
    user: "admin"
    password: "admin"
    url: "http://localhost:3000/api/admin/users/"
    body_format: "json"
    method: "POST"
    validate_certs: False
    body: "{{ lookup('file', 'files/grafana_admin_post_payload.json') }}"
  register: grafana_api_result
  ignore_errors: true
  tags:
    - grafana_config

- name: Set Kafka user as Admin in Grafana
  uri: 
    force: True
    force_basic_auth: True
    user: "admin"
    password: "admin"
    url: "http://localhost:3000/api/org/users/{{ grafana_api_result.json.id }}/"
    body_format: "json"
    method: "PATCH"
    validate_certs: False
    body: "{{ lookup('file', 'files/grafana_admin_put_payload.json') }}"
  register: grafana_api_result
  ignore_errors: true
  tags:
    - grafana_config

- name: Upload dashboards
  uri: 
    force: True
    force_basic_auth: True
    user: "admin"
    password: "admin"
    url: "http://localhost:3000/api/dashboards/db"
    body_format: "json"
    method: "POST"
    validate_certs: False
    body: "{{ lookup('file', 'files/{{ dashboard_payload }}') }}"
  register: grafana_api_result
  vars:
    dashboard_payload: "{{ item }}"
  with_items:
    - kafka_dashboard.json
  ignore_errors: true
  tags:
    - grafana_config